// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LicUiTests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("UserManagement")]
    [NUnit.Framework.CategoryAttribute("UserManagement")]
    public partial class UserManagementFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = new string[] {
                "UserManagement"};
        
#line 1 "UserManagement.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "UserManagement", "\tAs an admin\r\n\tI want to be able to configure user data\r\n\tIn order manage them ", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
#line 8
 testRunner.Given("I navigate to Licenta app", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
 testRunner.And("I navigate to Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "key",
                        "value"});
            table52.AddRow(new string[] {
                        "username",
                        "admin"});
            table52.AddRow(new string[] {
                        "password",
                        "Admin@123"});
#line 10
 testRunner.When("I log in with the following credentials", ((string)(null)), table52, "When ");
#line hidden
#line 14
 testRunner.Then("I\'m successfully logged into Licenta app with user A", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 15
 testRunner.And("I navigate to \'Clienti\' tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Successfully create a new user")]
        [NUnit.Framework.CategoryAttribute("SmokeTests")]
        [NUnit.Framework.CategoryAttribute("UserCleanUp")]
        public void SuccessfullyCreateANewUser()
        {
            string[] tagsOfScenario = new string[] {
                    "SmokeTests",
                    "UserCleanUp"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successfully create a new user", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 18
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
#line 19
 testRunner.When("I select \'Adauga client nou\' button from Clienti tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                            "key",
                            "value"});
                table53.AddRow(new string[] {
                            "Prenume",
                            "Customer"});
                table53.AddRow(new string[] {
                            "Nume",
                            "UI Test"});
                table53.AddRow(new string[] {
                            "Companie",
                            "Company Demo"});
                table53.AddRow(new string[] {
                            "Username",
                            "customerUItest"});
                table53.AddRow(new string[] {
                            "Parola",
                            "Admin@123"});
                table53.AddRow(new string[] {
                            "Email",
                            "customerui@test"});
#line 20
 testRunner.And("I register the customer with the following details", ((string)(null)), table53, "And ");
#line hidden
#line 28
 testRunner.And("I select \'Adauga client nou\' button from Register modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
 testRunner.Then("the following toast message is displayed: Noul client a fost adaugat cu succes!", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 30
 testRunner.And("the new customer is displayed through Customers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cannot create a new user with and existing username")]
        [NUnit.Framework.CategoryAttribute("SmokeTests")]
        public void CannotCreateANewUserWithAndExistingUsername()
        {
            string[] tagsOfScenario = new string[] {
                    "SmokeTests"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cannot create a new user with and existing username", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 33
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
#line 34
 testRunner.When("I select \'Adauga client nou\' button from Clienti tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                            "key",
                            "value"});
                table54.AddRow(new string[] {
                            "Prenume",
                            "Customer"});
                table54.AddRow(new string[] {
                            "Nume",
                            "UI Test"});
                table54.AddRow(new string[] {
                            "Companie",
                            "Company Demo"});
                table54.AddRow(new string[] {
                            "Username",
                            "custone"});
                table54.AddRow(new string[] {
                            "Parola",
                            "Admin@123"});
                table54.AddRow(new string[] {
                            "Email",
                            "customerui@test"});
#line 35
 testRunner.And("I register the customer with the following details", ((string)(null)), table54, "And ");
#line hidden
#line 43
 testRunner.And("I select \'Adauga client nou\' button from Register modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.Then("the following error message is displayed: Exista deja un client cu acest usernume" +
                        ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cannot create a new user with without filling in all the data")]
        [NUnit.Framework.CategoryAttribute("SmokeTests")]
        public void CannotCreateANewUserWithWithoutFillingInAllTheData()
        {
            string[] tagsOfScenario = new string[] {
                    "SmokeTests"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cannot create a new user with without filling in all the data", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 47
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
#line 48
 testRunner.When("I select \'Adauga client nou\' button from Clienti tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                            "key",
                            "value"});
                table55.AddRow(new string[] {
                            "Prenume",
                            "Customer"});
                table55.AddRow(new string[] {
                            "Nume",
                            "UI Test"});
                table55.AddRow(new string[] {
                            "Companie",
                            "Company Demo"});
                table55.AddRow(new string[] {
                            "Username",
                            ""});
                table55.AddRow(new string[] {
                            "Parola",
                            "Admin@123"});
                table55.AddRow(new string[] {
                            "Email",
                            ""});
#line 49
 testRunner.And("I register the customer with the following details", ((string)(null)), table55, "And ");
#line hidden
#line 57
 testRunner.And("I select \'Adauga client nou\' button from Register modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
 testRunner.Then("the following error message is displayed: Toate campurile sunt obligatorii.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Successfully update a new user")]
        [NUnit.Framework.CategoryAttribute("SmokeTests")]
        [NUnit.Framework.CategoryAttribute("UserCleanUp")]
        public void SuccessfullyUpdateANewUser()
        {
            string[] tagsOfScenario = new string[] {
                    "SmokeTests",
                    "UserCleanUp"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successfully update a new user", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 61
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
#line 62
 testRunner.When("I select \'Adauga client nou\' button from Clienti tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                            "key",
                            "value"});
                table56.AddRow(new string[] {
                            "Prenume",
                            "Customer"});
                table56.AddRow(new string[] {
                            "Nume",
                            "UI Test"});
                table56.AddRow(new string[] {
                            "Companie",
                            "Company Demo"});
                table56.AddRow(new string[] {
                            "Username",
                            "customerUItest"});
                table56.AddRow(new string[] {
                            "Parola",
                            "Admin@123"});
                table56.AddRow(new string[] {
                            "Email",
                            "customerui@test"});
#line 63
 testRunner.And("I register the customer with the following details", ((string)(null)), table56, "And ");
#line hidden
#line 71
 testRunner.And("I select \'Adauga client nou\' button from Register modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 72
 testRunner.Then("the following toast message is displayed: Noul client a fost adaugat cu succes!", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 73
 testRunner.When("I select \'Modifica\' button from Clienti tab for the customerUItest username", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                            "key",
                            "value"});
                table57.AddRow(new string[] {
                            "Prenume",
                            "Customer Updated"});
#line 74
 testRunner.And("I update the following data for the customer selected", ((string)(null)), table57, "And ");
#line hidden
#line 77
 testRunner.Then("I select Actualizeaza button on customer update modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 78
 testRunner.And("the following toast message is displayed: Clientul a fost actualizat cu succes.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 79
 testRunner.And("the new customer is displayed through Customers page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Successfully update user\'s password")]
        [NUnit.Framework.CategoryAttribute("SmokeTests")]
        [NUnit.Framework.CategoryAttribute("UserCleanUp")]
        public void SuccessfullyUpdateUsersPassword()
        {
            string[] tagsOfScenario = new string[] {
                    "SmokeTests",
                    "UserCleanUp"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successfully update user\'s password", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 83
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
#line 84
 testRunner.When("I select \'Adauga client nou\' button from Clienti tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                            "key",
                            "value"});
                table58.AddRow(new string[] {
                            "Prenume",
                            "Customer"});
                table58.AddRow(new string[] {
                            "Nume",
                            "UI Test"});
                table58.AddRow(new string[] {
                            "Companie",
                            "Company Demo"});
                table58.AddRow(new string[] {
                            "Username",
                            "customerUItest"});
                table58.AddRow(new string[] {
                            "Parola",
                            "Admin@123"});
                table58.AddRow(new string[] {
                            "Email",
                            "customerui@test"});
#line 85
 testRunner.And("I register the customer with the following details", ((string)(null)), table58, "And ");
#line hidden
#line 93
 testRunner.And("I select \'Adauga client nou\' button from Register modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 94
 testRunner.Then("the following toast message is displayed: Noul client a fost adaugat cu succes!", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 95
 testRunner.When("I choose to disconnect from Licenta app", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 96
 testRunner.Then("I\'m successfully disconnected: Pentru a putea utiliza toate functionalitatile, te" +
                        " rugam sa te conectezi.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 97
 testRunner.When("I navigate to Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                            "key",
                            "value"});
                table59.AddRow(new string[] {
                            "username",
                            "customerUItest"});
                table59.AddRow(new string[] {
                            "password",
                            "Admin@123"});
#line 98
 testRunner.And("I log in with the following credentials", ((string)(null)), table59, "And ");
#line hidden
#line 102
 testRunner.And("I navigate to user\'s profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                            "key",
                            "value"});
                table60.AddRow(new string[] {
                            "Old password",
                            "Admin@123"});
                table60.AddRow(new string[] {
                            "New password",
                            "Admin@12345"});
#line 103
 testRunner.And("I update user\'s password", ((string)(null)), table60, "And ");
#line hidden
#line 107
 testRunner.Then("the following toast message is displayed: Parola a fost schimbata. Te rugam sa te" +
                        " reconectezi folosind noua parola.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 108
 testRunner.And("I\'m successfully disconnected: Pentru a putea utiliza toate functionalitatile, te" +
                        " rugam sa te conectezi.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 109
 testRunner.When("I navigate to Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                            "key",
                            "value"});
                table61.AddRow(new string[] {
                            "username",
                            "customerUItest"});
                table61.AddRow(new string[] {
                            "password",
                            "Admin@12345"});
#line 110
 testRunner.And("I log in with the following credentials", ((string)(null)), table61, "And ");
#line hidden
#line 114
 testRunner.Then("I\'m successfully logged into Licenta app with user C", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
